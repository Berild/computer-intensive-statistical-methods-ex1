<<echo=FALSE, cache=FALSE>>=
read_chunk("../code/functions.R")
@
<<echo=FALSE, cache=FALSE>>=
read_chunk("../code/problemA1.R")
@
<<echo=FALSE, cache=FALSE>>=
read_chunk("../code/problemA2.R")
@
<<echo=FALSE, cache=FALSE>>=
read_chunk("../code/problemA3.R")
@
<<echo=FALSE, cache=FALSE>>=
read_chunk("../code/problemA4.R")
@
<<echo=FALSE>>=
source("../code/functions.R")
source("../code/multiplot.R")
library(ggplot2)
library(tibble)
@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\paragraph{1.}
We consider the exponential distribution with parameter $\lambda > 0$, and wish to generate samples from this. The distribution is
%
\begin{equation}
\label{eq:exp}
   f(x) =  \lambda e^{-\lambda x},
\end{equation}
and the inverse of which is
\begin{equation}
\label{eq:inv_exp}
    x = f^{-1} = -\frac{1}{\lambda}\ln{u}.
\end{equation}
Using the inverse and that $f(x) = u ~ U[0,1]$, we generate a vector of $n$ samples and compare it with the exact exponential distribution in the code below.
%
<<r_exp, eval=FALSE>>=
@

test \texttt{r\_exp()}.
%
<<A1, fig.align='center', fig.width=6, fig.height=4, fig.cap="Theoretical density (red line) from a exponential distribution with parameter $\\lambda = 0.5$ and frequency histogram of simulations.">>==
@
%
In Figure \ref{fig:A1} we can see that the histogram of the samples follow the exponential distribution using the same $\lambda$. The code also outputs the maximum error of the mean and variance. This tells us that the samples are from a exponential distribution.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\paragraph{2.}

\paragraph{(a)}
We calculated the cumulative distribution function from the density function by 
$G(x) = \int_{-\infty}^{x} g(x) dx$, and we get
%
\begin{equation}
G(x) =
\begin{cases}
0, & x \leq 0 \\
c\alpha^{-1}x^\alpha, & 0\ < x < 1 \\
c(\alpha^{-1} + e^{-1}-e^{-x}), & 1\leq x .
\end{cases}
\end{equation}
%
From this knowledge we find that the inverse of G(x) is:
%
\begin{equation}
G^{-1}(u) = 
\begin{cases}
\left(\frac{u\alpha}{c}\right)^{\frac{1}{\alpha}}, & 0 < u \leq c\alpha^{-1} \\
ln\left[c^{-1}(u-1)\right], & c\alpha^{-1} < u \leq 1
\end{cases}
\end{equation}
%
We find the expected value of x by $E(x) = \int_0^\infty x g(x) dx$, and get
%
\begin{equation}
    E(x) = c\left[\frac{1}{\alpha+1}+2e^{-1}\right] . 
\label{eq:expected_A}
\end{equation}
%
The variance one can find from the equation $var(x) = E(x^2)-\left[E(x)\right]^2$. Then by calculating $E(x^2)$ the same way as the expected value in \eqref{eq:expected_A}, we get
%
\begin{equation}
    Var(x) = c\left[\frac{1}{\alpha+2}+5e^{-1}\right] -c^2\left[ \frac{1}{\alpha+1}+ 2e^{-1}\right].
\end{equation}
Furthermore one calculates the normalizing constant $c$ from calculating $\int_0^\infty g(x) dx= 1$ and solving for $c$. Yielding 
$ c = \frac{e^1 \alpha}{e^1 + \alpha}$.

\paragraph{(b)}
We wish to generate samples from $g$ and compare it to the theoretical distribution. The code \texttt{r\_g()} generates a vector of n independent samples from $g$ with $\alpha \in (0, 1)$.
%
<<g, eval=FALSE>>=
@
\vspace{-1em}
<<rg, eval=FALSE>>=
@

test \texttt{rg()}.
%
<<A2, fig.align='center', fig.width=6, fig.height=4, fig.cap="Theoretical density (red line) from the $g(x)$ distribution with $\\alpha = 0.5$ and frequency histogram of simulations.">>==
@
%
In Figure \ref{fig:A2} we see that the histogram height follow the theoretical distribution of g(x) using $\alpha = 0.5$. Also the code test of  \texttt{r\_g()} outputs the maximum relative error and variance. This tells us that the samples are indeed from the distribution $g(x)$.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\paragraph{3.}
%

We wish to generate $n$ samples of two standard normal distribution using the Box-Muller algorithm, which consist of generating two uniform distributed variables in polar coordinates. Then transforming them into cartesian coordinates and we will check if these are indeed then normal distributed.
%
<<r_boxmuller, eval=FALSE>>=
@

test \texttt{r\_boxmuller()}.
%
<<A3, fig.align='center', fig.width=6, fig.height=4, fig.cap="fig caption">>==
@
%
In Figure \ref{fig:A3} we see that the frequency plot of the two sample follow the theoretical standard normal distribution $\mathcal{N}[0,1]$. This tells us that the Box-Muller algorithm worked in generating samples from a standard normal distribution.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\paragraph{4.}
%
We wish to generate $n$ samples from a $d$-variate normal distribution with a given mean $\mu$ and covariance $\Sigma$. We use the Box-Muller algorithm to generate $n$ samples of $d$ standard normal distribution($\vect{x} \sim \mathcal{N}_d[0,1]$). Then we use that $\vect{y} = \vect{\mu} + A\vect{x}$, where $\mu \sim \mathcal{U}_d[0,10]$ and $A$ is a $(d x d)$ matrix of uniformly distributed elements ($a_{ij} = U[0,1]$). Then we choose the covariance matrix to be $\Sigma = AA^T$, which makes it positive definite. 
%
<<r_multinorm, eval=FALSE>>=
@

test \texttt{r\_multinorm()}.
%
<<A4, fig.align='center', fig.width=6, fig.height=4, fig.cap="fig caption">>==
@
%
From running test \texttt{r\_boxmuller()}, which outputs the maximum relative error of the mean and covariance, we see that we have generated samples from a d-variate normal distribution. 
% maybe have divariate plot of this?
